{"version":3,"sources":["react-auth0-spa.js","components/NavBar.js","components/PrivateRoute.js","utils/Utils.js","components/Profile.js","utils/history.js","utils/Request.js","components/Loader.js","components/Home.js","components/Posts.js","App.js","serviceWorker.js","index.js"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Auth0Provider","children","onRedirectCallback","initOptions","useState","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","useEffect","a","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","console","error","Provider","value","getIdTokenClaims","loginWithRedirect","getTokenSilently","getTokenWithPopup","logout","NavBar","Navbar","collapseOnSelect","expand","bg","variant","className","Brand","href","src","width","alt","Toggle","aria-controls","Collapse","id","Nav","to","picture","nickname","Link","eventKey","Button","onClick","PrivateRoute","Component","component","path","rest","targetUrl","fn","render","props","Utils","formatDate","date","Date","toLocaleDateString","getHours","slice","getMinutes","formatOnlyDate","formatFullDate","getSeconds","convertDateAMDT","toISOString","replace","Profile","name","Container","updated_at","email","email_verified","createBrowserHistory","HOST","TOKEN","Request","getJSON","url","Promise","resolve","reject","fetch","method","headers","then","response","json","res","catch","postJSON","data","credentials","body","JSON","stringify","err","Loader","version","xmlns","x","y","viewBox","enableBackground","xml","fill","d","attributeName","attributeType","type","dur","from","repeatCount","Posts","fetchMoreData","setTimeout","photos","state","items","page","me","this","datos","setState","concat","result","dataLength","length","next","hasMore","loader","map","ind","key","thumbnail","album_id","posts","title_box","comment_box","default","_links","avatar","first_name","last_name","dob","goRest_id","i","elements","user_id","info_user","event","obj","target","log","Row","Col","lg","md","placeholder","onChange","handleChange","bind","style","color","sendData","App","exact","Home","Boolean","hostname","match","ReactDOM","domain","config","client_id","clientId","redirect_uri","origin","push","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"kXAGMA,EAA4B,kBAChCC,OAAOC,QAAQC,aAAa,GAAIC,SAASC,MAAOJ,OAAOK,SAASC,WAErDC,EAAeC,IAAMC,gBACrBC,EAAW,kBAAMC,qBAAWJ,IAC5BK,EAAgB,SAAC,GAIvB,IAHLC,EAGI,EAHJA,SAGI,IAFJC,0BAEI,MAFiBf,EAEjB,EADDgB,EACC,mDAC0CC,qBAD1C,mBACGC,EADH,KACoBC,EADpB,OAEoBF,qBAFpB,mBAEGG,EAFH,KAESC,EAFT,OAG4BJ,qBAH5B,mBAGGK,EAHH,KAGgBC,EAHhB,OAI0BN,oBAAS,GAJnC,mBAIGO,EAJH,KAIYC,EAJZ,OAK8BR,oBAAS,GALvC,mBAKGS,EALH,KAKcC,EALd,KAOJC,qBAAU,YAEO,uCAAG,oCAAAC,EAAA,sEACYC,IAAkBd,GAD9B,UACVe,EADU,OAEhBR,EAASQ,IAEL9B,OAAOK,SAAS0B,OAAOC,SAAS,WAChChC,OAAOK,SAAS0B,OAAOC,SAAS,UALpB,iCAMaF,EAAcG,yBAN3B,gBAMNC,EANM,EAMNA,SACRpB,EAAmBoB,GAPL,yBAUcJ,EAAcb,kBAV5B,WAUVA,EAVU,OAYhBC,EAAmBD,IAEfA,EAdY,kCAeKa,EAAcK,UAfnB,QAeRhB,EAfQ,OAgBdC,EAAQD,GAhBM,QAmBhBK,GAAW,GAnBK,4CAAH,qDAsBfY,KAEC,IAEH,IAAMC,EAAc,uCAAG,0CAAAT,EAAA,6DAAOU,EAAP,+BAAgB,GACrCZ,GAAa,GADQ,kBAGbL,EAAYgB,eAAeC,GAHd,uDAKnBC,QAAQC,MAAR,MALmB,yBAOnBd,GAAa,GAPM,sCASFL,EAAYc,UATV,QASfhB,EATe,OAUrBC,EAAQD,GACRD,GAAmB,GAXE,+DAAH,qDAcde,EAAsB,uCAAG,4BAAAL,EAAA,6DAC7BJ,GAAW,GADkB,SAEvBH,EAAYY,yBAFW,uBAGVZ,EAAYc,UAHF,OAGvBhB,EAHuB,OAI7BK,GAAW,GACXN,GAAmB,GACnBE,EAAQD,GANqB,2CAAH,qDAQ5B,OACE,kBAACZ,EAAakC,SAAd,CACEC,MAAO,CACLzB,kBACAE,OACAI,UACAE,YACAY,iBACAJ,yBACAU,iBAAkB,kBAAUtB,EAAYsB,iBAAZ,MAAAtB,EAAW,YACvCuB,kBAAmB,kBAAUvB,EAAYuB,kBAAZ,MAAAvB,EAAW,YACxCwB,iBAAkB,kBAAUxB,EAAYwB,iBAAZ,MAAAxB,EAAW,YACvCyB,kBAAmB,kBAAUzB,EAAYyB,kBAAZ,MAAAzB,EAAW,YACxC0B,OAAQ,kBAAU1B,EAAY0B,OAAZ,MAAA1B,EAAW,cAG9BR,I,gCCvCQmC,EAzCA,WAAO,IAAD,EAC0CtC,IAArDO,EADW,EACXA,gBAAiB2B,EADN,EACMA,kBAAmBG,EADzB,EACyBA,OAAQ5B,EADjC,EACiCA,KAEpD,OACE,6BAEA,kBAAC8B,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,QAAQC,QAAQ,QAAQC,UAAU,uBACxE,kBAACL,EAAA,EAAOM,MAAR,CAAcC,KAAK,SACjB,yBACEC,IAAI,6DACJC,MAAM,MACNJ,UAAU,2BACVK,IAAI,gBAGR,kBAACV,EAAA,EAAOW,OAAR,CAAeC,gBAAc,0BAC7B,kBAACZ,EAAA,EAAOa,SAAR,CAAiBC,GAAG,yBAClB,kBAACC,EAAA,EAAD,CAAKV,UAAU,WACZrC,GACC,8BACE,kBAAC,IAAD,CAAMqC,UAAU,gBAAgBW,GAAG,KAAnC,QADF,OAEE,kBAAC,IAAD,CAAMX,UAAU,gBAAgBW,GAAG,UAAnC,WAIN,kBAACD,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMV,UAAU,gBAAgBW,GAAG,YAChC9C,GAAS,yBAAKsC,IAAKtC,EAAK+C,QAASR,MAAM,KAAKJ,UAAU,yCAAyCK,IAAI,aACnGxC,GAAS,0BAAMmC,UAAU,eAAenC,EAAKgD,WAEhD,kBAACH,EAAA,EAAII,KAAL,CAAUC,SAAU,EAAGb,KAAK,MACxBvC,GAAoB,kBAACqD,EAAA,EAAD,CAAQjB,QAAQ,UAAUkB,QAAS,kBAAM3B,EAAkB,MAA3D,UACrB3B,GAAmB,kBAACqD,EAAA,EAAD,CAAQjB,QAAQ,iBAAiBkB,QAAS,kBAAMxB,MAAhD,iB,QCZjByB,EArBM,SAAC,GAA6C,IAAhCC,EAA+B,EAA1CC,UAAsBC,EAAoB,EAApBA,KAASC,EAAW,sCACRlE,IAAhDa,EADwD,EACxDA,QAASN,EAD+C,EAC/CA,gBAAiB2B,EAD8B,EAC9BA,kBAElCjB,qBAAU,WACJJ,GAAWN,GAGP,uCAAG,sBAAAW,EAAA,sEACHgB,EAAkB,CACtBV,SAAU,CAAC2C,UAAW7E,OAAOK,SAASC,YAF/B,2CAAH,oDAKRwE,KACC,CAACvD,EAASN,EAAiB2B,EAAmB+B,IAKjD,OAAO,kBAAC,IAAD,eAAOA,KAAMA,EAAMI,OAHX,SAAAC,GAAK,OACE,IAApB/D,EAA2B,kBAACwD,EAAcO,GAAY,OAEVJ,K,QCFjCK,EApBD,CACVC,WADU,SACCC,GAEP,OADAA,EAAO,IAAIC,KAAKD,IACJE,qBAAuB,KAAO,IAAMF,EAAKG,YAAYC,OAAO,GAAK,KAAO,IAAMJ,EAAKK,cAAcD,OAAO,IAExHE,eALU,SAKKN,GAEX,OADAA,EAAO,IAAIC,KAAKD,IACJE,sBAEhBK,eATU,SASKP,GAEX,OAAQ,KADRA,EAAO,IAAIC,KAAKD,IACGG,YAAYC,OAAO,GAAK,KAAO,IAAMJ,EAAKK,cAAcD,OAAO,GAAK,KAAO,IAAMJ,EAAKQ,cAAcJ,OAAO,IAElIK,gBAbU,SAaMT,GAEZ,OADAA,EAAO,IAAIC,KAAKD,IACJU,cAAcN,MAAM,EAAG,IAAIO,QAAQ,IAAK,OCwE7CC,EAnFC,WAAO,IAAD,EACIrF,IAAlBa,EADc,EACdA,QAASJ,EADK,EACLA,KAEf,OAAII,IAAYJ,EACP,2CAIP,kBAAC,WAAD,KAEE,yBAAKmC,UAAU,gBACb,yBAAKA,UAAU,UACb,yBAAKG,IAAKtC,EAAK+C,QAASP,IAAI,aAE9B,yBAAKL,UAAU,QACb,4BAAKnC,EAAK6E,QAId,kBAACC,EAAA,EAAD,KACE,yBAAK3C,UAAU,WACb,yBAAKA,UAAU,qBACb,4BACE,4BACE,yCACCnC,EAAKgD,UAER,4BACE,2CACCc,EAAMW,gBAAgBzE,EAAK+E,YAAY,8BAE1C,4BACE,sCACC/E,EAAKgF,OAER,4BACE,+CACChF,EAAKiF,eAAe,oCAA+B,2BAK1D,yBAAK9C,UAAU,oBAEb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,QAAd,YACA,yBAAKA,UAAU,QAAf,0ZAUF,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,QAAd,WACA,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,sBACf,yBAAKA,UAAU,eACX,wBAAIA,UAAU,2BACZ,wBAAIA,UAAU,WAAU,uBAAGE,KAAK,wBAAuB,uBAAGF,UAAU,iBAAgB,kCACpF,wBAAIA,UAAU,YAAW,uBAAGE,KAAK,6BAA4B,uBAAGF,UAAU,kBAAiB,kCAC3F,wBAAIA,UAAU,YAAW,uBAAGE,KAAK,6BAA4B,uBAAGF,UAAU,kBAAiB,kCAC3F,wBAAIA,UAAU,UAAS,uBAAGE,KAAK,4BAA2B,uBAAGF,UAAU,gBAAe,kCACtF,wBAAIA,UAAU,aAAY,uBAAGE,KAAK,8BAA6B,uBAAGF,UAAU,mBAAkB,kCAC9F,wBAAIA,UAAU,YAAW,uBAAGE,KAAK,8BAA6B,uBAAGF,UAAU,kBAAiB,4C,OCtEnG+C,gB,gCCETC,EAAO,kCACPC,EAAQ,8CAkDCC,EA9CC,CAEZC,QAFY,SAEJC,GACJ,OAAO,IAAIC,SAAQ,SAASC,EAASC,GACjCC,MAAMR,EAAOI,EAAK,CACdK,OAAQ,MACRC,QAAS,CACL,OAAU,mBACV,cAAiBT,EACjB,eAAgB,mBAChB,gBAAiB,cAEtBU,MAAK,SAASC,GACbA,EAASC,OAAOF,MAAK,SAASG,GAC1BR,EAAQQ,MACTC,OAAM,SAASD,GACdP,EAAOO,aAMvBE,SAtBY,SAsBHZ,EAAKa,GACV,OAAO,IAAIZ,SAAQ,SAASC,EAASC,GACjCC,MAAMR,EAAOI,EAAK,CACdM,QAAS,CACL,OAAU,mBACV,cAAiBT,EACjB,eAAgB,mBAChB,gBAAiB,YAErBiB,YAAa,cACbT,OAAQ,OACRU,KAAMC,KAAKC,UAAUJ,KACtBN,MAAK,SAASC,GACbA,EAASC,OAAOF,MAAK,SAASG,GAC1BR,EAAQQ,MACTC,OAAM,SAASD,GACdP,EAAOO,SAEZC,OAAM,SAASO,YC9CTC,E,uKAEb,OACI,6BACI,yBAAKC,QAAQ,MAAM/D,GAAG,KAAKgE,MAAM,6BAA6BC,EAAE,MAAMC,EAAE,MACxEC,QAAQ,cAAcC,iBAAiB,kBAAkBC,IAAI,YAC7D,0BAAMC,KAAK,UAAUC,EAAE,gJAEnB,sCACIC,cAAc,YACdC,cAAc,MACdC,KAAK,SACLC,IAAI,KACJC,KAAK,UACL1E,GAAG,YACH2E,YAAY,gBAEpB,0BAAMP,KAAK,UAAUC,EAAE,yIAEnB,sCACIC,cAAc,YACdC,cAAc,MACdC,KAAK,SACLC,IAAI,KACJC,KAAK,UACL1E,GAAG,aACH2E,YAAY,gBAEpB,0BAAMP,KAAK,UAAUC,EAAE,oHAEnB,sCACIC,cAAc,YACdC,cAAc,MACdC,KAAK,SACLC,IAAI,KACJC,KAAK,UACL1E,GAAG,YACH2E,YAAY,sB,GArCApI,IAAMiE,W,QCMrBoE,E,kDACjB,WAAY7D,GAAO,IAAD,8BACd,cAAMA,IAkBV8D,cAAgB,WACZC,YAAW,WACP,EAAKC,WACN,MApBH,EAAKC,MAAQ,CACTC,MAAO,GACPC,KAAM,GAEV,EAAKH,SANS,E,qDAST,IAAD,OACAI,EAAKC,KAAKJ,MACdzC,EAAQC,QAAQ,gBAAgB2C,EAAGD,MAAMlC,MAAK,SAACqC,GAC3C,EAAKC,SAAS,CACVL,MAAOE,EAAGF,MAAMM,OAAOF,EAAMG,QAC7BN,KAAMC,EAAGD,KAAK,S,+BAYtB,IAAIC,EAAKC,KAAKJ,MACd,OACI,kBAAC,WAAD,KACI,kBAAChD,EAAA,EAAD,CAAW3C,UAAU,gBACjB,6BACA,kBAAC,IAAD,CACAoG,WAAYN,EAAGF,MAAMS,OACrBC,KAAMP,KAAKP,cACXe,SAAS,EACTC,OAAQ,kBAAC,EAAD,OAEJ,wBAAIxG,UAAU,SAEI,IAAlB8F,EAAGF,MAAMS,OACLP,EAAGF,MAAMa,KAAI,SAACb,EAAOc,GACjB,OACI,wBAAI1G,UAAU,cAAc2G,IAAKD,GAC7B,yBAAK1G,UAAU,QACX,yBAAKA,UAAU,cAAcG,IAAKyF,EAAMgB,WAAa,4BAA4BF,EAAI,WAAYrG,IAAI,OACzG,yBAAKL,UAAU,iBACX,yBAAKA,UAAU,eAAf,aAAwC4F,EAAMiB,UAC9C,uBAAG7G,UAAU,cACR4F,EAAM9I,aAQ3B,kE,GAzDOI,IAAMiE,W,gBCApBoE,E,kDACjB,WAAY7D,GAAO,IAAD,8BACd,cAAMA,IAyDV8D,cAAgB,WACZC,YAAW,WACP,EAAKqB,UACN,MA3DH,EAAKnB,MAAQ,CACTC,MAAO,GACPC,KAAM,EACNkB,UAAW,GACXC,YAAa,GACbC,QAAS,CACLC,OAAQ,CACJC,OAAQ,CACJjH,KAAM,yDAGdkH,WAAY,SACZC,UAAW,UACXC,IAAK,aACLzE,MAAO,gCAEX0E,UAAW,SAEf,EAAKT,QApBS,E,oDAuBV,IAAD,OACChB,EAAKC,KAAKJ,MACdzC,EAAQC,QAAQ,eAAe2C,EAAGD,MAAMlC,KAAxC,uCAA6C,WAAMqC,GAAN,eAAA1H,EAAA,sDACrC2F,EAAO+B,EAAMG,OACjB,EAAKF,SAAS,CACVL,MAAOE,EAAGF,MAAMM,OAAOjC,GACvB4B,KAAMC,EAAGD,KAAK,IAElB,EAAKhI,OANoC,2CAA7C,yD,6BAaA,IAHG,IAAD,OAEEiJ,EADKf,KAAKJ,MACCC,MAFb,WAGO4B,GACL,IAAMC,EAAWX,EAAMU,GACO,iBAAnBC,EAASC,SAChBxE,EAAQC,QAAQ,UAAUsE,EAASC,SAAS/D,MAAK,SAACgE,EAAWrD,GACzDqD,EAAUxB,OAAOe,OAAOC,OAAOjH,KAAO,iDAAiDsH,EAAE,OACrFG,EAAUxB,OAAO1F,KAAOgH,EAASC,UACjCZ,EAAMU,GAAGE,QAAUC,EAAUxB,OAC7B,EAAKF,SAASa,EAAMU,SAP3BA,EAAI,EAAGA,EAAIV,EAAMT,OAAQmB,IAAM,EAA/BA,K,mCAcAb,EAAKiB,GACd,IAAIC,EAAM,GACVA,EAAIlB,GAAOiB,EAAME,OAAO1I,MAC9B2G,KAAKE,SAAS4B,K,iCAUR,IAAI/B,EAAKC,KAAKJ,MACV1B,EAAO,CACPnH,MAAOgJ,EAAGiB,UACV5C,KAAM2B,EAAGkB,YACTU,QAAS5B,EAAGyB,WAEhBrE,EAAQc,SAAS,SAAUC,GAAMN,MAAK,SAACmD,EAAOxC,GACtCA,GACArF,QAAQ8I,IAAI,MAAOzD,Q,+BAyB3B,IAAIwB,EAAKC,KAAKJ,MACd,OACI,kBAAC,WAAD,KACI,kBAAChD,EAAA,EAAD,CAAW3C,UAAU,gBAClB,6BACA,6BACC,kBAACgI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAChB,yBAAK1H,GAAG,OAAOT,UAAU,YACrB,2BAAOmF,KAAK,OAAO1E,GAAG,YAAYrB,MAAO0G,EAAGiB,UAAWqB,YAAY,QAAQC,SAAUtC,KAAKuC,aAAaC,KAAKxC,KAAK,eACjH,8BAAUrD,KAAK,GAAGjC,GAAG,cAAcrB,MAAO0G,EAAGkB,YAAaoB,YAAY,kBAAkBC,SAAUtC,KAAKuC,aAAaC,KAAKxC,KAAK,iBAC9H,0BAAMyC,MAAO,CAACC,MAAM,SAApB,YAAuC3C,EAAGyB,WAC1C,kBAACvG,EAAA,EAAD,CAAQjB,QAAQ,UAAUU,GAAG,MAAMQ,QAAS8E,KAAK2C,SAASH,KAAKxC,OAA/D,YAGJ,kBAACkC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,IAChB,kBAAC,IAAD,CACJ/B,WAAYN,EAAGF,MAAMS,OACrBC,KAAMP,KAAKP,cACXe,SAAS,EACTC,OAAQ,kBAAC,EAAD,OAGc,IAAlBV,EAAGF,MAAMS,OACLP,EAAGF,MAAMa,KAAI,SAACb,EAAOc,GACjB,IAAI7I,EAA8B,iBAAhB+H,EAAM8B,QAAoB9B,EAAM8B,QAAU5B,EAAGmB,QAC/D,OACI,yBAAKjH,UAAU,mBAAmB2G,IAAKD,GACnC,yBAAK1G,UAAU,YACX,yBAAKS,GAAG,sBACJ,yBAAKT,UAAU,WACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,UACf,yBAAKG,IAAKtC,EAAKqJ,OAAOC,OAAOjH,KAAMG,IAAKxC,EAAKuJ,cAEzC,0BAAMpH,UAAU,gBACZ,0BAAMA,UAAU,YAAYnC,EAAKuJ,WAAavJ,EAAKwJ,UAAnD,KACA,qCAAgB,8BAAOxJ,EAAKyJ,OAGxC,yBAAKtH,UAAU,gBACf,2BAAI4F,EAAM9I,OACV,2BAAI8I,EAAMzB,MACV,6BAAK,6BACL,uBAAGjE,KAAM,UAAUrC,EAAKgF,OAAQhF,EAAKgF,eAS7D,oE,GAxJO3F,IAAMiE,WCmB1BwH,MAjBf,WACE,OACE,yBAAK3I,UAAU,OACb,kBAAC,IAAD,CAAQrD,QAASA,GACf,gCACE,kBAAC,EAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0E,KAAK,IAAIuH,OAAK,EAACxH,UAAWyH,IACjC,kBAAC,EAAD,CAAcxH,KAAK,WAAWD,UAAWqB,IACzC,kBAAC,EAAD,CAAcpB,KAAK,SAASD,UAAWmE,QCR7BuD,QACW,cAA7BpM,OAAOK,SAASgM,UAEe,UAA7BrM,OAAOK,SAASgM,UAEhBrM,OAAOK,SAASgM,SAASC,MACvB,2D,YCFNC,IAASxH,OACP,kBAAC,EAAD,CACEyH,OAAQC,EAAOD,OACfE,UAAWD,EAAOE,SAClBC,aAAc5M,OAAOK,SAASwM,OAC9B/L,mBAbuB,SAAAoB,GACzBjC,EAAQ6M,KACN5K,GAAYA,EAAS2C,UACjB3C,EAAS2C,UACT7E,OAAOK,SAASC,YAWpB,kBAAC,EAAD,OAEFH,SAAS4M,eAAe,SD0GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjG,MAAK,SAAAkG,GACJA,EAAaC,gBAEd/F,OAAM,SAAA7E,GACLD,QAAQC,MAAMA,EAAM6K,c","file":"static/js/main.8f11b0c2.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes(\"code=\") &&\n          window.location.search.includes(\"state=\")) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};","import React from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport { Link } from \"react-router-dom\";\nimport {Navbar, Nav, Button} from \"react-bootstrap\";\n\nconst NavBar = () => {\n  const { isAuthenticated, loginWithRedirect, logout, user } = useAuth0();\n\n  return (\n    <div>\n\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\" className=\"gk-navbar fixed-top\">\n      <Navbar.Brand href=\"#home\">\n        <img\n          src=\"https://gluky.com/assets/images/img_home/up-gluky_logo.png\"\n          width=\"100\"\n          className=\"d-inline-block align-top\"\n          alt=\"Gluky logo\"\n        />\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          {isAuthenticated && (\n            <span>\n              <Link className=\"btn btn-light\" to=\"/\">Home</Link>&nbsp;\n              <Link className=\"btn btn-light\" to=\"/posts\">Posts</Link>\n            </span>\n          )}\n        </Nav>\n        <Nav>\n          <Link className=\"btn btn-light\" to=\"/profile\">\n            {user && (<img src={user.picture} width=\"30\" className=\"d-inline-block align-top photo_profile\" alt=\" profile\"/>)}\n            {user && (<span className=\"gk-nickname\">{user.nickname}</span>)}\n          </Link>\n          <Nav.Link eventKey={2} href=\"#\">\n            {!isAuthenticated && (<Button variant=\"success\" onClick={() => loginWithRedirect({})}>Log in</Button>)}\n            {isAuthenticated && <Button variant=\"outline-danger\" onClick={() => logout()}>Log out</Button>}\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n    </div>\n  );\n};\n\nexport default NavBar;","import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\n  const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\n\n  useEffect(() => {\n    if (loading || isAuthenticated) {\n      return;\n    }\n    const fn = async () => {\n      await loginWithRedirect({\n        appState: {targetUrl: window.location.pathname}\n      });\n    };\n    fn();\n  }, [loading, isAuthenticated, loginWithRedirect, path]);\n\n  const render = props =>\n    isAuthenticated === true ? <Component {...props} /> : null;\n\n  return <Route path={path} render={render} {...rest} />;\n};\n\nexport default PrivateRoute;","const Utils = {\n    formatDate(date) {\n        date = new Date(date);\n        return date.toLocaleDateString() + ' ' + ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2);\n    },\n    formatOnlyDate(date) {\n        date = new Date(date);\n        return date.toLocaleDateString();\n    },\n    formatFullDate(date) {\n        date = new Date(date);\n        return ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2);\n    },\n    convertDateAMDT(date) {\n        date = new Date(date);\n        return date.toISOString().slice(0, 19).replace('T', \" \");\n    }\n}\n// module.exports = new Utils();\n// module.default = Utils;\nexport default Utils;","import React, { Fragment } from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport { Container } from \"react-bootstrap\";\nimport Utils from \"../utils/Utils\";\nconst Profile = () => {\nconst { loading, user } = useAuth0();\n\n  if (loading || !user) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <Fragment>\n\n      <div className='image-header'>\n        <div className='avatar'>\n          <img src={user.picture} alt=\"Profile\"/>\n        </div>\n        <div className='info'>\n          <h1>{user.name}</h1>\n        </div>\n      </div>\n\n      <Container>\n        <div className='content'>\n          <div className='side-content card'>\n            <ul>\n              <li>\n                <h3>Nickname:</h3>\n                {user.nickname}\n              </li>\n              <li>\n                <h3>Updated at:</h3>\n                {Utils.convertDateAMDT(user.updated_at)}<br/>\n              </li>\n              <li>\n                <h3>Email:</h3>\n                {user.email}\n              </li>\n              <li>\n                <h3>Email verified:</h3>\n                {user.email_verified?\"❌ Please validate your email\":\"✅ Email verified\"}\n              </li>\n            </ul>\n          </div>\n          \n          <div className='comments-content'>\n            \n            <div className='comments card'>\n              <h2 className='name'>About me</h2>\n              <div className='text'>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n              Mauris placerat nisl at mauris placerat, vitae finibus risus dapibus.\n              Nulla blandit ipsum et libero condimentum, ut sollicitudin velit viverra.\n              Vestibulum mi velit, consequat vitae ex ac, maximus vestibulum lacus.\n              Praesent condimentum mauris ultrices lacus laoreet, consectetur volutpat sem sagittis.\n              Donec sit amet lacinia mi, vitae lacinia augue.\n              </div>\n            </div>\n\n            <div className='comments card'>\n              <h2 className='name'>Socials</h2>\n              <div className=\"socials-wrap\">\n                <div className=\"socials-wrap-inner\">\n                <div className=\"iva-socials\">\n                    <ul className=\"at-socials icon-style-8\">\n                      <li className=\"twitter\"><a href=\"https://twitter.com/\"><i className=\"fa fa-twitter\"><span></span></i></a></li>\n                      <li className=\"linkedin\"><a href=\"https://www.linkedin.com/\"><i className=\"fa fa-linkedin\"><span></span></i></a></li>\n                      <li className=\"facebook\"><a href=\"https://www.facebook.com/\"><i className=\"fa fa-facebook\"><span></span></i></a></li>\n                      <li className=\"google\"><a href=\"https://www.google.co.in\"><i className=\"fa fa-google\"><span></span></i></a></li>\n                      <li className=\"instagram\"><a href=\"https://www.instagram.com/\"><i className=\"fa fa-instagram\"><span></span></i></a></li>\n                      <li className=\"whatsapp\"><a href=\"https://www.instagram.com/\"><i className=\"fa fa-whatsapp\"><span></span></i></a></li>\n                    </ul>\n                  </div>\n                </div>\n            </div>\n\n            </div>\n\n          </div>\n        </div>\n\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default Profile;","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();","/* \n    * Constante API\n*/\nconst HOST = \"https://gorest.co.in/public-api\";\nconst TOKEN = \"Bearer dPP8uJy1tj9ThP5-laG2svpwXikEruXEz7Uf\"\n/*\n    * Creación de clase con metodos\n*/\nconst Request = {\n\n    getJSON(url){\n        return new Promise(function(resolve, reject) {\n            fetch(HOST + url, {\n                method: \"GET\",\n                headers: {\n                    'Accept': 'application/json',\n                    'Authorization': TOKEN,\n                    'Content-Type': 'application/json',\n                    'access-method': 'api-json'\n                },\n            }).then(function(response) {\n                response.json().then(function(res) {\n                    resolve(res);\n                }).catch(function(res) {\n                    reject(res);\n                });\n            });\n        });\n    },\n\n    postJSON(url, data) {\n        return new Promise(function(resolve, reject) {\n            fetch(HOST + url, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Authorization': TOKEN,\n                    'Content-Type': 'application/json',\n                    'access-method': 'api-json'\n                },\n                credentials: 'same-origin',\n                method: \"POST\",\n                body: JSON.stringify(data)\n            }).then(function(response) {\n                response.json().then(function(res) {\n                    resolve(res);\n                }).catch(function(res) {\n                    reject(res);\n                });\n            }).catch(function(err) {\n            });\n        });\n    }\n}\n\nexport default Request;","import React from \"react\";\n\nexport default class Loader extends React.Component {\n    render() {\n        return(\n            <div>\n                <svg version=\"1.1\" id=\"L7\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                viewBox=\"0 0 100 100\" enableBackground=\"new 0 0 100 100\" xml=\"preserve\">\n                <path fill=\"#ffbe07\" d=\"M31.6,3.5C5.9,13.6-6.6,42.7,3.5,68.4c10.1,25.7,39.2,38.3,64.9,28.1l-3.1-7.9c-21.3,8.4-45.4-2-53.8-23.3\n                c-8.4-21.3,2-45.4,23.3-53.8L31.6,3.5z\">\n                    <animateTransform \n                        attributeName=\"transform\" \n                        attributeType=\"XML\" \n                        type=\"rotate\"\n                        dur=\"2s\" \n                        from=\"0 50 50\"\n                        to=\"360 50 50\" \n                        repeatCount=\"indefinite\" />\n                </path>\n                <path fill=\"#17b8b1\" d=\"M42.3,39.6c5.7-4.3,13.9-3.1,18.1,2.7c4.3,5.7,3.1,13.9-2.7,18.1l4.1,5.5c8.8-6.5,10.6-19,4.1-27.7\n                c-6.5-8.8-19-10.6-27.7-4.1L42.3,39.6z\">\n                    <animateTransform \n                        attributeName=\"transform\" \n                        attributeType=\"XML\" \n                        type=\"rotate\"\n                        dur=\"1s\" \n                        from=\"0 50 50\"\n                        to=\"-360 50 50\" \n                        repeatCount=\"indefinite\" />\n                </path>\n                <path fill=\"#f18c15\" d=\"M82,35.7C74.1,18,53.4,10.1,35.7,18S10.1,46.6,18,64.3l7.6-3.4c-6-13.5,0-29.3,13.5-35.3s29.3,0,35.3,13.5\n                L82,35.7z\">\n                    <animateTransform \n                        attributeName=\"transform\" \n                        attributeType=\"XML\" \n                        type=\"rotate\"\n                        dur=\"2s\" \n                        from=\"0 50 50\"\n                        to=\"360 50 50\" \n                        repeatCount=\"indefinite\" />\n                </path>\n                </svg>\n            </div>\n            );\n    }\n}","import React, { Fragment } from \"react\";\nimport {\n    Container\n} from \"react-bootstrap\";\nimport Request from \"../utils/Request\";\nimport Loader from \"./Loader\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nexport default class Posts extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            items: [],\n            page: 1\n        }\n        this.photos()\n    }\n\n    photos(){\n        var me = this.state;\n        Request.getJSON(\"/photos?page=\"+me.page).then((datos)=>{\n            this.setState({\n                items: me.items.concat(datos.result),\n                page: me.page+1\n            })\n        })\n    }\n\n    fetchMoreData = () => {\n        setTimeout(() => {\n            this.photos()\n        }, 500);\n    };\n\n    render() {\n        var me = this.state\n        return(\n            <Fragment>\n                <Container className=\"gk-container\">\n                    <hr />\n                    <InfiniteScroll\n                    dataLength={me.items.length}\n                    next={this.fetchMoreData}\n                    hasMore={true}\n                    loader={<Loader/>}\n                    >\n                        <ul className=\"cards\">\n                    {\n                        me.items.length!==0?(\n                            me.items.map((items, ind) => {\n                                return(\n                                    <li className=\"cards__item\" key={ind}>\n                                        <div className=\"card\">\n                                            <img className=\"card__image\" src={items.thumbnail || \"https://picsum.photos/id/\"+ind+\"/200/300\"} alt=\"al\"/>\n                                        <div className=\"card__content\">\n                                            <div className=\"card__title\">Album ID: {items.album_id}</div>\n                                            <p className=\"card__text\">\n                                                {items.title}\n                                            </p>\n                                        </div>\n                                        </div>\n                                    </li>\n                                )\n                            })\n                        ):(\n                            <div>\n                                No hay datos para mostrar\n                            </div>\n                        )\n                    }\n                    </ul>\n                    </InfiniteScroll>\n                </Container>\n            </Fragment>\n            );\n    }\n}","import React, {Fragment} from \"react\";\nimport {\n    Container, Row, Col,Button\n} from \"react-bootstrap\";\nimport Request from \"../utils/Request\";\nimport Loader from \"./Loader\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nexport default class Posts extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            items: [],\n            page: 1,\n            title_box: \"\",\n            comment_box: \"\",\n            default: {\n                _links: {\n                    avatar: {\n                        href: \"https://randomuser.me/api/portraits/thumb/men/28.jpg\"\n                    }\n                },\n                first_name: \"Daniel\",\n                last_name: \"Aguirre\",\n                dob: \"1995-03-28\",\n                email: \"daniel.aguirre.dev@gmail.com\",\n            },\n            goRest_id: \"12114\"\n        }\n        this.posts()\n    }\n\n    posts(){\n        var me = this.state\n        Request.getJSON(\"/posts?page=\"+me.page).then(async(datos)=>{\n            let data = datos.result;\n            this.setState({\n                items: me.items.concat(data),\n                page: me.page+1\n            });\n            this.user()\n        })\n    }\n\n    user(){\n        var me = this.state\n        var posts = me.items\n        for (let i = 0; i < posts.length; i++) {\n            const elements = posts[i];\n            if (typeof(elements.user_id)==\"string\") {\n                Request.getJSON(\"/users/\"+elements.user_id).then((info_user, err)=>{\n                    info_user.result._links.avatar.href = \"https://randomuser.me/api/portraits/thumb/men/\"+i+\".jpg\"\n                    if (info_user.result.id === elements.user_id) {\n                        posts[i].user_id = info_user.result\n                        this.setState(posts[i])\n                    }\n                })   \n            }\n        }\n    }\n\n    handleChange(key, event){\n        var obj = {}\n        obj[key] = event.target.value;\n\t\tthis.setState(obj);\n    }\n\n    fetchMoreData = () => {\n        setTimeout(() => {\n            this.posts()\n        }, 500);\n    };\n\n    sendData() {\n        var me = this.state\n        var data = {\n            title: me.title_box,\n            body: me.comment_box,\n            user_id: me.goRest_id\n        }\n        Request.postJSON(\"/posts\", data).then((posts, err)=>{\n            if (err) {\n                console.log(\"err\", err)\n            }\n            else{\n                /* \n                    * En proceso ya que los datos quedan en la última página\n                    * de las más de 4.000 que hay en la api.\n                    * Se puede comprobar que el comentario queda, poniendo el id.\n                */\n\n                // var newPost = posts.result\n                // Request.getJSON(\"/users/\"+newPost.user_id).then((info_user, err)=>{\n                //     info_user.result._links.avatar.href = \"https://randomuser.me/api/portraits/thumb/men/\"+me.page+\".jpg\"\n                //     console.log(\"info_user\", info_user)\n                //     newPost.user_id = info_user.result\n                //     if (newPost.id) {\n                //         this.setState({\n                //             items: me.items.unshift(newPost),\n                //         });\n                //     }\n                // })\n            }\n        });\n    }\n\n    render() {\n        var me = this.state\n        return(\n            <Fragment>\n                <Container className=\"gk-container\">\n                   <div>\n                   <hr />\n                    <Row>\n                        <Col lg={4} md={2} >\n                        <div id=\"form\" className=\"clearfix\">\n                            <input type=\"text\" id=\"title-box\" value={me.title_box} placeholder=\"Title\" onChange={this.handleChange.bind(this,'title_box')} />\n                            <textarea name=\"\" id=\"comment-box\" value={me.comment_box} placeholder=\"Leave a comment\" onChange={this.handleChange.bind(this,'comment_box')} ></textarea>\n                            <span style={{color:\"#fff\"}}>user id: {me.goRest_id}</span>\n                            <Button variant=\"success\" id=\"btn\" onClick={this.sendData.bind(this)} >Submit</Button>\n                        </div>\n                        </Col>\n                        <Col lg={8} md={10}>\n                        <InfiniteScroll\n                    dataLength={me.items.length}\n                    next={this.fetchMoreData}\n                    hasMore={true}\n                    loader={<Loader/>}\n                    >\n                    {\n                        me.items.length!==0?(\n                            me.items.map((items, ind) => {\n                                var user = typeof(items.user_id)!=\"string\"?(items.user_id):(me.default);\n                                return(\n                                    <div className=\"comments-section\" key={ind}>\n                                        <div className=\"comments\">\n                                            <div id=\"comments-container\">\n                                                <div className=\"comment\">\n                                                    <div className=\"comment-user\">\n                                                        <div className=\"avatar\">\n                                                        <img src={user._links.avatar.href} alt={user.first_name} />\n                                                        </div>\n                                                            <span className=\"user-details\">\n                                                                <span className=\"username\">{user.first_name + user.last_name} </span>\n                                                                <span>on </span><span>{user.dob}</span>\n                                                            </span>\n                                                    </div>\n                                                    <div className=\"comment-text\"> \n                                                    <p>{items.title}</p>\n                                                    <p>{items.body}</p>\n                                                    <br/><br/>\n                                                    <a href={\"mailto:\"+user.email}>{user.email}</a>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                            })\n                        ):(\n                            <div>\n                                No hay datos para mostrar\n                            </div>\n                        )\n                    }\n                    </InfiniteScroll>\n                        </Col>\n                    </Row>\n\n                   </div>\n                </Container>\n            </Fragment>\n            );\n    }\n}","import React from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport Profile from \"./components/Profile\";\nimport history from \"./utils/history\";\nimport Home from \"./components/Home\";\nimport Posts from \"./components/Posts\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <header>\n          <NavBar />\n        </header>\n        <Switch>\n          <Route path=\"/\" exact component={Home}/>\n          <PrivateRoute path=\"/profile\" component={Profile} />\n          <PrivateRoute path=\"/posts\" component={Posts} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Auth0Provider } from \"./react-auth0-spa\";\nimport config from \"./auth_config.json\";\nimport history from \"./utils/history\";\n\nconst onRedirectCallback = appState => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <Auth0Provider\n    domain={config.domain}\n    client_id={config.clientId}\n    redirect_uri={window.location.origin}\n    onRedirectCallback={onRedirectCallback}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}